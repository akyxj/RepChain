akka {
  //actor {
  //  warn-about-java-serializer-usage = off
  //}
  actor {
    warn-about-java-serializer-usage = off
    default-mailbox {
  		mailbox-type = "akka.dispatch.SingleConsumerOnlyUnboundedMailbox"
	}
	default-dispatcher{
		parallelism-min =10
		parallelism-factor = 3.0
		parallelism-max = 120
		throughput = 5
	}
  }

  //    cluster {
  //        //种子节点
  //      seed-nodes = ["akka.ssl.tcp://Repchain@192.168.100.93:8082"]
  //        #"akka.tcp://repChain@192.168.1.17:64426"]
  //    }

  #remote.netty.tcp.port=0
  //  remote.netty.ssl.port = 0
  remote {
    netty.ssl {
      //external (logical) hostname
      //          hostname=192.168.100.93
      port = 0
      //      port=8082//0，automatic assign
      //internal (bind) hostname
      //      bind-hostname=192.168.1.129
      //      bind-port=8082
    }

    netty.ssl.security {
      //基础路径
      base-path = "jks/"
      //名称前缀
      base-name = "mykeystore_"
      alias = "1"
      //      key-store = "jks/mykeystore_1.jks"

      //用户ca文件密码
      key-store-password = "123"
      //用户证书密码
      key-password = "123"
    }
  }
}


system {
  //api是否开启
  //如果是单机多节点测试模式（Repchain，则选择0，默认节点1会开启）
  ws_enable = 0//api 0,不开启;1,开启
  //交易生产方式
  trans_create_type = 1 //0,手动;1,自动
  //是否进行TPS测试
  statistic_enable = 0 // 0,unable;able

  block {
    //块内交易的最大数量
    trans_num_limit = 10
    //块内交易标准最小数量
    trans_num_min =1
    //交易数量不足，重试次数
    retry_time = 10
  }

  vote {
    //最低投票人数量
    vote_note_min = 4
  }

  endorsement {
	
  }

 diskspaceManager{
 	diskspacealarm = 5000//M 
 }

  transaction {
    //辅助自动创建交易的间隔
    tran_create_dur = 50 //millis
    //最大交易缓存量
    max_cache_num = 10000
  }

  sync {

  }

  cluster {
    //节点入网稳定时间
    node_stable_delay = 5000 //millis
  }

  time {
    //通用稳定延迟
    stable_time_dur = 5000 //millis，确保block模块能够接收到confirm的块数据

    block {
      //投票选举重试间隔
      vote_retry_delay = 100
      //投票重试无果后等待时间
      //waiting_delay = 3600000
      waiting_delay = 360
    }

    //超时策略：1,手动；0，自动
    timeout_policy_type = 0

    timeout {
      //Unit : Second
      //For auto
      base_preload = 30
      base_vote = 20//内部消息传递速度快
      base_sync = 20//没有耗时操作，没有大块传输的情况下
      base_addition = 0//冗余量

      //For config manually
      block = 60
      endorse = 40
      transaction_preload = 30
      sync_chain = 30
    }
  }

  consensus {
    //共识类型，目前只支持一种
    type = "CRFD"
  }
}